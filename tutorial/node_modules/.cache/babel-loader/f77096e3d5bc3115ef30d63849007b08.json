{"ast":null,"code":"'use strict';\n\nvar toUpperFirst = require('./toUpperFirst');\n\nvar getPrefix = require('./getPrefix');\n\nvar el = require('./el');\n\nvar MEMORY = {};\nvar STYLE;\nvar ELEMENT;\nvar PREFIX;\n\nmodule.exports = function (key, value) {\n  ELEMENT = ELEMENT || el();\n  STYLE = STYLE || ELEMENT.style;\n  var k = key; // + ': ' + value\n\n  if (MEMORY[k]) {\n    return MEMORY[k];\n  }\n\n  var prefix;\n  var prefixed;\n\n  if (!(key in STYLE)) {\n    //we have to prefix\n    // if (PREFIX){\n    //     prefix = PREFIX\n    // } else {\n    prefix = getPrefix('appearance'); //     if (prefix){\n    //         prefix = PREFIX = prefix.toLowerCase()\n    //     }\n    // }\n\n    if (prefix) {\n      prefixed = prefix + toUpperFirst(key);\n\n      if (prefixed in STYLE) {\n        key = prefixed;\n      }\n    }\n  }\n\n  MEMORY[k] = key;\n  return key;\n};","map":{"version":3,"names":["toUpperFirst","require","getPrefix","el","MEMORY","STYLE","ELEMENT","PREFIX","module","exports","key","value","style","k","prefix","prefixed"],"sources":["/Users/waiwai/Desktop/Github/Einstein/tutorial/node_modules/react-style-normalizer/src/getStylePrefixed.js"],"sourcesContent":["'use strict';\n\nvar toUpperFirst = require('./toUpperFirst')\nvar getPrefix    = require('./getPrefix')\nvar el           = require('./el')\n\nvar MEMORY = {}\nvar STYLE\nvar ELEMENT\n\nvar PREFIX\n\nmodule.exports = function(key, value){\n\n    ELEMENT = ELEMENT || el()\n    STYLE   = STYLE   || ELEMENT.style\n\n    var k = key// + ': ' + value\n\n    if (MEMORY[k]){\n        return MEMORY[k]\n    }\n\n    var prefix\n    var prefixed\n\n    if (!(key in STYLE)){//we have to prefix\n\n        // if (PREFIX){\n        //     prefix = PREFIX\n        // } else {\n            prefix = getPrefix('appearance')\n\n        //     if (prefix){\n        //         prefix = PREFIX = prefix.toLowerCase()\n        //     }\n        // }\n\n        if (prefix){\n            prefixed = prefix + toUpperFirst(key)\n\n            if (prefixed in STYLE){\n                key = prefixed\n            }\n        }\n    }\n\n    MEMORY[k] = key\n\n    return key\n}"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AACA,IAAIC,SAAS,GAAMD,OAAO,CAAC,aAAD,CAA1B;;AACA,IAAIE,EAAE,GAAaF,OAAO,CAAC,MAAD,CAA1B;;AAEA,IAAIG,MAAM,GAAG,EAAb;AACA,IAAIC,KAAJ;AACA,IAAIC,OAAJ;AAEA,IAAIC,MAAJ;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,KAAd,EAAoB;EAEjCL,OAAO,GAAGA,OAAO,IAAIH,EAAE,EAAvB;EACAE,KAAK,GAAKA,KAAK,IAAMC,OAAO,CAACM,KAA7B;EAEA,IAAIC,CAAC,GAAGH,GAAR,CALiC,CAKtB;;EAEX,IAAIN,MAAM,CAACS,CAAD,CAAV,EAAc;IACV,OAAOT,MAAM,CAACS,CAAD,CAAb;EACH;;EAED,IAAIC,MAAJ;EACA,IAAIC,QAAJ;;EAEA,IAAI,EAAEL,GAAG,IAAIL,KAAT,CAAJ,EAAoB;IAAC;IAEjB;IACA;IACA;IACIS,MAAM,GAAGZ,SAAS,CAAC,YAAD,CAAlB,CALY,CAOhB;IACA;IACA;IACA;;IAEA,IAAIY,MAAJ,EAAW;MACPC,QAAQ,GAAGD,MAAM,GAAGd,YAAY,CAACU,GAAD,CAAhC;;MAEA,IAAIK,QAAQ,IAAIV,KAAhB,EAAsB;QAClBK,GAAG,GAAGK,QAAN;MACH;IACJ;EACJ;;EAEDX,MAAM,CAACS,CAAD,CAAN,GAAYH,GAAZ;EAEA,OAAOA,GAAP;AACH,CAtCD"},"metadata":{},"sourceType":"script"}