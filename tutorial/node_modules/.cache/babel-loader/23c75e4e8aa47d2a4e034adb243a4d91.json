{"ast":null,"code":"function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\nmodule.exports = function (lightness, hue, darkBackground) {\n  if (typeof hue === \"undefined\") {\n    hue = 0;\n  }\n\n  if (typeof darkBackground === \"undefined\") {\n    darkBackground = false;\n  } // Convert named hues into numeric lightness value.\n\n\n  if (hue === \"cool\") {\n    hue = 237;\n  } else if (hue === \"slate\") {\n    hue = 122;\n  } else if (hue === \"warm\") {\n    hue = 69;\n  }\n\n  if (!isNumeric(hue)) {\n    throw new Error(\"Hue is not a number\");\n  }\n\n  if (!isNumeric(lightness)) {\n    throw new Error(\"Lightness is not a number\");\n  }\n\n  if (lightness > 100) {\n    lightness = 100;\n  }\n\n  if (lightness < 0) {\n    lightness = 0;\n  }\n\n  var saturation = 0;\n\n  if (hue !== 0) {\n    var a = 19.92978;\n    var b = -0.3651759;\n    var c = 0.001737214;\n    saturation = a + b * lightness + c * Math.pow(lightness, 2);\n  }\n\n  var opacity = 0;\n\n  if (darkBackground) {\n    opacity = lightness / 100;\n    lightness = '100%,';\n  } else {\n    opacity = (100 - lightness) / 100;\n    lightness = '0%,';\n  }\n\n  return \"hsla(\" + hue + \",\" + saturation + \"%,\" + lightness + opacity + \")\";\n};","map":{"version":3,"names":["isNumeric","n","isNaN","parseFloat","isFinite","module","exports","lightness","hue","darkBackground","Error","saturation","a","b","c","Math","pow","opacity"],"sources":["/Users/waiwai/Desktop/Github/Einstein/tutorial/node_modules/gray-percentage/index.js"],"sourcesContent":["function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n\nmodule.exports = function(lightness, hue, darkBackground) {\n  if (typeof hue === \"undefined\") {\n    hue = 0;\n  }\n  if (typeof darkBackground === \"undefined\") {\n    darkBackground = false;\n  }\n\n  // Convert named hues into numeric lightness value.\n  if (hue === \"cool\") {\n    hue = 237;\n  }\n  else if (hue === \"slate\") {\n    hue = 122;\n  }\n  else if (hue === \"warm\") {\n    hue = 69;\n  }\n\n  if (!isNumeric(hue)) {\n    throw new Error(\"Hue is not a number\");\n  }\n\n  if (!isNumeric(lightness)) {\n    throw new Error(\"Lightness is not a number\");\n  }\n\n  if (lightness > 100) {\n    lightness = 100;\n  }\n  if (lightness < 0) {\n    lightness = 0;\n  }\n\n  var saturation = 0;\n  if (hue !== 0) {\n    var a = 19.92978;\n    var b = -0.3651759;\n    var c = 0.001737214;\n    saturation = a + b * lightness + c * Math.pow(lightness, 2);\n  }\n\n  var opacity = 0\n  if (darkBackground) {\n    opacity = lightness / 100\n    lightness = '100%,'\n  } else {\n    opacity = (100 - lightness) / 100\n    lightness = '0%,'\n  }\n\n  return \"hsla(\" + hue + \",\" + saturation + \"%,\" + lightness + opacity + \")\";\n};\n"],"mappings":"AAAA,SAASA,SAAT,CAAmBC,CAAnB,EAAsB;EACpB,OAAO,CAACC,KAAK,CAACC,UAAU,CAACF,CAAD,CAAX,CAAN,IAAyBG,QAAQ,CAACH,CAAD,CAAxC;AACD;;AAGDI,MAAM,CAACC,OAAP,GAAiB,UAASC,SAAT,EAAoBC,GAApB,EAAyBC,cAAzB,EAAyC;EACxD,IAAI,OAAOD,GAAP,KAAe,WAAnB,EAAgC;IAC9BA,GAAG,GAAG,CAAN;EACD;;EACD,IAAI,OAAOC,cAAP,KAA0B,WAA9B,EAA2C;IACzCA,cAAc,GAAG,KAAjB;EACD,CANuD,CAQxD;;;EACA,IAAID,GAAG,KAAK,MAAZ,EAAoB;IAClBA,GAAG,GAAG,GAAN;EACD,CAFD,MAGK,IAAIA,GAAG,KAAK,OAAZ,EAAqB;IACxBA,GAAG,GAAG,GAAN;EACD,CAFI,MAGA,IAAIA,GAAG,KAAK,MAAZ,EAAoB;IACvBA,GAAG,GAAG,EAAN;EACD;;EAED,IAAI,CAACR,SAAS,CAACQ,GAAD,CAAd,EAAqB;IACnB,MAAM,IAAIE,KAAJ,CAAU,qBAAV,CAAN;EACD;;EAED,IAAI,CAACV,SAAS,CAACO,SAAD,CAAd,EAA2B;IACzB,MAAM,IAAIG,KAAJ,CAAU,2BAAV,CAAN;EACD;;EAED,IAAIH,SAAS,GAAG,GAAhB,EAAqB;IACnBA,SAAS,GAAG,GAAZ;EACD;;EACD,IAAIA,SAAS,GAAG,CAAhB,EAAmB;IACjBA,SAAS,GAAG,CAAZ;EACD;;EAED,IAAII,UAAU,GAAG,CAAjB;;EACA,IAAIH,GAAG,KAAK,CAAZ,EAAe;IACb,IAAII,CAAC,GAAG,QAAR;IACA,IAAIC,CAAC,GAAG,CAAC,SAAT;IACA,IAAIC,CAAC,GAAG,WAAR;IACAH,UAAU,GAAGC,CAAC,GAAGC,CAAC,GAAGN,SAAR,GAAoBO,CAAC,GAAGC,IAAI,CAACC,GAAL,CAAST,SAAT,EAAoB,CAApB,CAArC;EACD;;EAED,IAAIU,OAAO,GAAG,CAAd;;EACA,IAAIR,cAAJ,EAAoB;IAClBQ,OAAO,GAAGV,SAAS,GAAG,GAAtB;IACAA,SAAS,GAAG,OAAZ;EACD,CAHD,MAGO;IACLU,OAAO,GAAG,CAAC,MAAMV,SAAP,IAAoB,GAA9B;IACAA,SAAS,GAAG,KAAZ;EACD;;EAED,OAAO,UAAUC,GAAV,GAAgB,GAAhB,GAAsBG,UAAtB,GAAmC,IAAnC,GAA0CJ,SAA1C,GAAsDU,OAAtD,GAAgE,GAAvE;AACD,CApDD"},"metadata":{},"sourceType":"script"}