{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n} // Generated by CoffeeScript 2.6.0\n\n\nvar _snake_case, _clone, _compare, is_object, is_object_literal, merge, _mutate, _snake_case2;\n\nmerge = function merge() {\n  return _mutate.apply(void 0, [{}].concat(Array.prototype.slice.call(arguments)));\n};\n\n_clone = function clone(target) {\n  if (Array.isArray(target)) {\n    return target.map(function (element) {\n      return _clone(element);\n    });\n  } else if (target && _typeof(target) === 'object') {\n    return _mutate({}, target);\n  } else {\n    return target;\n  }\n};\n\n_mutate = function mutate() {\n  var i, j, name, ref, source, target, v;\n  target = arguments[0];\n\n  for (i = j = 1, ref = arguments.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {\n    source = arguments[i];\n\n    if (is_object_literal(source)) {\n      if (!is_object_literal(target)) {\n        target = {};\n      }\n\n      for (name in source) {\n        if (/__proto__|prototype/.test(name)) {\n          // See\n          // https://github.com/adaltas/node-mixme/issues/1\n          // https://github.com/adaltas/node-mixme/issues/2\n          // continue if /__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test name\n          // Unless proven wrong, I consider ok to copy any properties named eval\n          // or function, we are not executing those, only copying.\n          continue;\n        }\n\n        target[name] = _mutate(target[name], source[name]);\n      }\n    } else if (Array.isArray(source)) {\n      target = function () {\n        var k, len, results;\n        results = [];\n\n        for (k = 0, len = source.length; k < len; k++) {\n          v = source[k];\n          results.push(_mutate(void 0, v));\n        }\n\n        return results;\n      }();\n    } else if (source !== void 0) {\n      target = source;\n    }\n  }\n\n  return target;\n};\n\n_snake_case2 = function snake_case(source) {\n  var convert = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var name, src, target, u;\n  target = {};\n\n  if (is_object_literal(source)) {\n    u = typeof convert === 'number' && convert > 0 ? convert - 1 : convert;\n\n    for (name in source) {\n      src = source[name];\n\n      if (convert) {\n        name = _snake_case(name);\n      }\n\n      target[name] = _snake_case2(src, u);\n    }\n  } else {\n    target = source;\n  }\n\n  return target;\n};\n\n_compare = function compare(el1, el2) {\n  var i, j, k, key, keys1, keys2, len, ref;\n\n  if (is_object_literal(el1)) {\n    if (!is_object_literal(el2)) {\n      return false;\n    }\n\n    keys1 = Object.keys(el1).sort();\n    keys2 = Object.keys(el2).sort();\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    for (i = j = 0, len = keys1.length; j < len; i = ++j) {\n      key = keys1[i];\n\n      if (key !== keys2[i]) {\n        return false;\n      }\n\n      if (!_compare(el1[key], el2[key])) {\n        return false;\n      }\n    }\n  } else if (Array.isArray(el1)) {\n    if (!Array.isArray(el2)) {\n      return false;\n    }\n\n    if (el1.length !== el2.length) {\n      return false;\n    }\n\n    for (i = k = 0, ref = el1.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n      if (!_compare(el1[i], el2[i])) {\n        return false;\n      }\n    }\n  } else {\n    if (el1 !== el2) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n_snake_case = function _snake_case(str) {\n  return str.replace(/([A-Z])/g, function (_, match, index) {\n    return '_' + match.toLowerCase();\n  });\n};\n\nis_object = function is_object(obj) {\n  return obj && _typeof(obj) === 'object' && !Array.isArray(obj);\n};\n\nis_object_literal = function is_object_literal(obj) {\n  var test;\n  test = obj;\n\n  if (_typeof(obj) !== 'object' || obj === null) {\n    return false;\n  } else {\n    if (Object.getPrototypeOf(test) === null) {\n      return true;\n    }\n\n    while (!false) {\n      if (Object.getPrototypeOf(test = Object.getPrototypeOf(test)) === null) {\n        break;\n      }\n    }\n\n    return Object.getPrototypeOf(obj) === test;\n  }\n};\n\nexport { _clone as clone, _compare as compare, is_object, is_object_literal, merge, _mutate as mutate, _snake_case2 as snake_case };","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_snake_case","_clone","_compare","is_object","is_object_literal","merge","_mutate","_snake_case2","apply","concat","Array","slice","call","arguments","clone","target","isArray","map","element","mutate","i","j","name","ref","source","v","length","test","k","len","results","push","snake_case","convert","undefined","src","u","compare","el1","el2","key","keys1","keys2","Object","keys","sort","str","replace","_","match","index","toLowerCase","getPrototypeOf"],"sources":["/Users/waiwai/Desktop/Github/Einstein/testing/node_modules/mixme/dist/mixme.esm.js"],"sourcesContent":["function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n// Generated by CoffeeScript 2.6.0\nvar _snake_case, _clone, _compare, is_object, is_object_literal, merge, _mutate, _snake_case2;\n\nmerge = function merge() {\n  return _mutate.apply(void 0, [{}].concat(Array.prototype.slice.call(arguments)));\n};\n\n_clone = function clone(target) {\n  if (Array.isArray(target)) {\n    return target.map(function (element) {\n      return _clone(element);\n    });\n  } else if (target && _typeof(target) === 'object') {\n    return _mutate({}, target);\n  } else {\n    return target;\n  }\n};\n\n_mutate = function mutate() {\n  var i, j, name, ref, source, target, v;\n  target = arguments[0];\n\n  for (i = j = 1, ref = arguments.length; 1 <= ref ? j < ref : j > ref; i = 1 <= ref ? ++j : --j) {\n    source = arguments[i];\n\n    if (is_object_literal(source)) {\n      if (!is_object_literal(target)) {\n        target = {};\n      }\n\n      for (name in source) {\n        if (/__proto__|prototype/.test(name)) {\n          // See\n          // https://github.com/adaltas/node-mixme/issues/1\n          // https://github.com/adaltas/node-mixme/issues/2\n          // continue if /__proto__|constructor|prototype|eval|function|\\*|\\+|;|\\s|\\(|\\)|!/.test name\n          // Unless proven wrong, I consider ok to copy any properties named eval\n          // or function, we are not executing those, only copying.\n          continue;\n        }\n\n        target[name] = _mutate(target[name], source[name]);\n      }\n    } else if (Array.isArray(source)) {\n      target = function () {\n        var k, len, results;\n        results = [];\n\n        for (k = 0, len = source.length; k < len; k++) {\n          v = source[k];\n          results.push(_mutate(void 0, v));\n        }\n\n        return results;\n      }();\n    } else if (source !== void 0) {\n      target = source;\n    }\n  }\n\n  return target;\n};\n\n_snake_case2 = function snake_case(source) {\n  var convert = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var name, src, target, u;\n  target = {};\n\n  if (is_object_literal(source)) {\n    u = typeof convert === 'number' && convert > 0 ? convert - 1 : convert;\n\n    for (name in source) {\n      src = source[name];\n\n      if (convert) {\n        name = _snake_case(name);\n      }\n\n      target[name] = _snake_case2(src, u);\n    }\n  } else {\n    target = source;\n  }\n\n  return target;\n};\n\n_compare = function compare(el1, el2) {\n  var i, j, k, key, keys1, keys2, len, ref;\n\n  if (is_object_literal(el1)) {\n    if (!is_object_literal(el2)) {\n      return false;\n    }\n\n    keys1 = Object.keys(el1).sort();\n    keys2 = Object.keys(el2).sort();\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    for (i = j = 0, len = keys1.length; j < len; i = ++j) {\n      key = keys1[i];\n\n      if (key !== keys2[i]) {\n        return false;\n      }\n\n      if (!_compare(el1[key], el2[key])) {\n        return false;\n      }\n    }\n  } else if (Array.isArray(el1)) {\n    if (!Array.isArray(el2)) {\n      return false;\n    }\n\n    if (el1.length !== el2.length) {\n      return false;\n    }\n\n    for (i = k = 0, ref = el1.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {\n      if (!_compare(el1[i], el2[i])) {\n        return false;\n      }\n    }\n  } else {\n    if (el1 !== el2) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n_snake_case = function _snake_case(str) {\n  return str.replace(/([A-Z])/g, function (_, match, index) {\n    return '_' + match.toLowerCase();\n  });\n};\n\nis_object = function is_object(obj) {\n  return obj && _typeof(obj) === 'object' && !Array.isArray(obj);\n};\n\nis_object_literal = function is_object_literal(obj) {\n  var test;\n  test = obj;\n\n  if (_typeof(obj) !== 'object' || obj === null) {\n    return false;\n  } else {\n    if (Object.getPrototypeOf(test) === null) {\n      return true;\n    }\n\n    while (!false) {\n      if (Object.getPrototypeOf(test = Object.getPrototypeOf(test)) === null) {\n        break;\n      }\n    }\n\n    return Object.getPrototypeOf(obj) === test;\n  }\n};\n\nexport { _clone as clone, _compare as compare, is_object, is_object_literal, merge, _mutate as mutate, _snake_case2 as snake_case };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}