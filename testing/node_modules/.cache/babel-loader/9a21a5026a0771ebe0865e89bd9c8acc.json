{"ast":null,"code":"/*\nCSV Generate - main module\n\nPlease look at the [project documentation](https://csv.js.org/generate/) for\nadditional information.\n*/\nconst stream = require('stream');\n\nconst util = require('util');\n\nmodule.exports = function () {\n  let options;\n  let callback;\n\n  if (arguments.length === 2) {\n    options = arguments[0];\n    callback = arguments[1];\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'function') {\n      options = {};\n      callback = arguments[0];\n    } else {\n      options = arguments[0];\n    }\n  } else if (arguments.length === 0) {\n    options = {};\n  }\n\n  const generator = new Generator(options);\n\n  if (callback) {\n    const data = [];\n    generator.on('readable', function () {\n      let d;\n\n      while (d = generator.read()) {\n        data.push(d);\n      }\n    });\n    generator.on('error', callback);\n    generator.on('end', function () {\n      if (generator.options.objectMode) {\n        callback(null, data);\n      } else {\n        if (generator.options.encoding) {\n          callback(null, data.join(''));\n        } else {\n          callback(null, Buffer.concat(data));\n        }\n      }\n    });\n  }\n\n  return generator;\n};\n\nGenerator = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // Convert Stream Readable options if underscored\n  if (options.high_water_mark) {\n    options.highWaterMark = options.high_water_mark;\n  }\n\n  if (options.object_mode) {\n    options.objectMode = options.object_mode;\n  } // Call parent constructor\n\n\n  stream.Readable.call(this, options); // Clone and camelize options\n\n  this.options = {};\n\n  for (let k in options) {\n    this.options[Generator.camelize(k)] = options[k];\n  } // Normalize options\n\n\n  const dft = {\n    columns: 8,\n    delimiter: ',',\n    duration: null,\n    encoding: null,\n    end: null,\n    eof: false,\n    fixedSize: false,\n    length: -1,\n    maxWordLength: 16,\n    rowDelimiter: '\\n',\n    seed: false,\n    sleep: 0\n  };\n\n  for (const k in dft) {\n    if (this.options[k] === undefined) {\n      this.options[k] = dft[k];\n    }\n  } // Default values\n\n\n  if (this.options.eof === true) {\n    this.options.eof = this.options.rowDelimiter;\n  } // State\n\n\n  this._ = {\n    start_time: this.options.duration ? Date.now() : null,\n    fixed_size_buffer: '',\n    count_written: 0,\n    count_created: 0\n  };\n\n  if (typeof this.options.columns === 'number') {\n    this.options.columns = new Array(this.options.columns);\n  }\n\n  const accepted_header_types = Object.keys(Generator).filter(t => !['super_', 'camelize'].includes(t));\n\n  for (let i = 0; i < this.options.columns.length; i++) {\n    const v = this.options.columns[i] || 'ascii';\n\n    if (typeof v === 'string') {\n      if (!accepted_header_types.includes(v)) {\n        throw Error(`Invalid column type: got \"${v}\", default values are ${JSON.stringify(accepted_header_types)}`);\n      }\n\n      this.options.columns[i] = Generator[v];\n    }\n  }\n\n  return this;\n};\n\nutil.inherits(Generator, stream.Readable); // Export the class\n\nmodule.exports.Generator = Generator; // Generate a random number between 0 and 1 with 2 decimals. The function is idempotent if it detect the \"seed\" option.\n\nGenerator.prototype.random = function () {\n  if (this.options.seed) {\n    return this.options.seed = this.options.seed * Math.PI * 100 % 100 / 100;\n  } else {\n    return Math.random();\n  }\n}; // Stop the generation.\n\n\nGenerator.prototype.end = function () {\n  this.push(null);\n}; // Put new data into the read queue.\n\n\nGenerator.prototype._read = function (size) {\n  // Already started\n  const data = [];\n  let length = this._.fixed_size_buffer.length;\n\n  if (length !== 0) {\n    data.push(this._.fixed_size_buffer);\n  }\n\n  while (true) {\n    // Time for some rest: flush first and stop later\n    if (this._.count_created === this.options.length || this.options.end && Date.now() > this.options.end || this.options.duration && Date.now() > this._.start_time + this.options.duration) {\n      // Flush\n      if (data.length) {\n        if (this.options.objectMode) {\n          for (const line of data) {\n            this.__push(line);\n          }\n        } else {\n          this.__push(data.join('') + (this.options.eof ? this.options.eof : ''));\n        }\n      } // Stop\n\n\n      return this.push(null);\n    } // Create the line\n\n\n    let line = [];\n    let lineLength;\n    this.options.columns.forEach(fn => {\n      line.push(fn(this));\n    }); // for(const header in this.options.columns){\n    //   // Create the field\n    //   line.push(header(this))\n    // }\n    // Obtain line length\n\n    if (this.options.objectMode) {\n      lineLength = 0;\n\n      for (const column of line) lineLength += column.length;\n    } else {\n      // Stringify the line\n      line = (this._.count_created === 0 ? '' : this.options.rowDelimiter) + line.join(this.options.delimiter);\n      lineLength = line.length;\n    }\n\n    this._.count_created++;\n\n    if (length + lineLength > size) {\n      if (this.options.objectMode) {\n        data.push(line);\n\n        for (const line of data) {\n          this.__push(line);\n        }\n      } else {\n        if (this.options.fixedSize) {\n          this._.fixed_size_buffer = line.substr(size - length);\n          data.push(line.substr(0, size - length));\n        } else {\n          data.push(line);\n        }\n\n        this.__push(data.join(''));\n      }\n\n      return;\n    }\n\n    length += lineLength;\n    data.push(line);\n  }\n}; // Put new data into the read queue.\n\n\nGenerator.prototype.__push = function (record) {\n  this._.count_written++;\n\n  if (this.options.sleep > 0) {\n    setTimeout(() => {\n      this.push(record);\n    }, this.options.sleep);\n  } else {\n    this.push(record);\n  }\n}; // Generate an ASCII value.\n\n\nGenerator.ascii = function (gen) {\n  // Column\n  const column = [];\n  const nb_chars = Math.ceil(gen.random() * gen.options.maxWordLength);\n\n  for (let i = 0; i < nb_chars; i++) {\n    const char = Math.floor(gen.random() * 32);\n    column.push(String.fromCharCode(char + (char < 16 ? 65 : 97 - 16)));\n  }\n\n  return column.join('');\n}; // Generate an integer value.\n\n\nGenerator.int = function (gen) {\n  return Math.floor(gen.random() * Math.pow(2, 52));\n}; // Generate an boolean value.\n\n\nGenerator.bool = function (gen) {\n  return Math.floor(gen.random() * 2);\n}; // Camelize option properties\n\n\nGenerator.camelize = function (str) {\n  return str.replace(/_([a-z])/gi, function (_, match, index) {\n    return match.toUpperCase();\n  });\n};","map":{"version":3,"names":["stream","require","util","module","exports","options","callback","arguments","length","generator","Generator","data","on","d","read","push","objectMode","encoding","join","Buffer","concat","high_water_mark","highWaterMark","object_mode","Readable","call","k","camelize","dft","columns","delimiter","duration","end","eof","fixedSize","maxWordLength","rowDelimiter","seed","sleep","undefined","_","start_time","Date","now","fixed_size_buffer","count_written","count_created","Array","accepted_header_types","Object","keys","filter","t","includes","i","v","Error","JSON","stringify","inherits","prototype","random","Math","PI","_read","size","line","__push","lineLength","forEach","fn","column","substr","record","setTimeout","ascii","gen","nb_chars","ceil","char","floor","String","fromCharCode","int","pow","bool","str","replace","match","index","toUpperCase"],"sources":["/Users/waiwai/Desktop/Github/Einstein/testing/node_modules/async-csv/node_modules/csv-generate/lib/index.js"],"sourcesContent":["\n/*\nCSV Generate - main module\n\nPlease look at the [project documentation](https://csv.js.org/generate/) for\nadditional information.\n*/\n\nconst stream = require('stream')\nconst util = require('util')\n\nmodule.exports = function(){\n  let options\n  let callback\n  if(arguments.length === 2){\n    options = arguments[0]\n    callback = arguments[1]\n  }else if(arguments.length === 1){\n    if(typeof arguments[0] === 'function'){\n      options = {}\n      callback = arguments[0]\n    }else{\n      options = arguments[0]\n    }\n  }else if(arguments.length === 0){\n    options = {}\n  }\n  const generator = new Generator(options)\n  if(callback){\n    const data = []\n    generator.on('readable', function(){\n      let d; while(d = generator.read()){\n        data.push(d)\n      }\n    })\n    generator.on('error', callback)\n    generator.on('end', function(){\n      if(generator.options.objectMode){\n        callback(null, data)\n      }else{\n        if(generator.options.encoding){\n          callback(null, data.join(''))\n        }else{\n          callback(null, Buffer.concat(data))\n        }\n      }\n    })\n  }\n  return generator\n}\n\nGenerator = function(options = {}){\n  // Convert Stream Readable options if underscored\n  if(options.high_water_mark){\n    options.highWaterMark = options.high_water_mark\n  }\n  if(options.object_mode){\n    options.objectMode = options.object_mode\n  }\n  // Call parent constructor\n  stream.Readable.call(this, options)\n  // Clone and camelize options\n  this.options = {}\n  for(let k in options){\n    this.options[Generator.camelize(k)] = options[k]\n  }\n  // Normalize options\n  const dft = {\n    columns: 8,\n    delimiter: ',',\n    duration: null,\n    encoding: null,\n    end: null,\n    eof: false,\n    fixedSize: false,\n    length: -1,\n    maxWordLength: 16,\n    rowDelimiter: '\\n',\n    seed: false,\n    sleep: 0,\n  }\n  for(const k in dft){\n    if(this.options[k] === undefined){\n      this.options[k] = dft[k]\n    }\n  }\n  // Default values\n  if(this.options.eof === true){\n    this.options.eof = this.options.rowDelimiter\n  }\n  // State\n  this._ = {\n    start_time: this.options.duration ? Date.now() : null,\n    fixed_size_buffer: '',\n    count_written: 0,\n    count_created: 0,\n  }\n  if(typeof this.options.columns === 'number'){\n    this.options.columns = new Array(this.options.columns)\n  }\n  const accepted_header_types = Object.keys(Generator).filter( (t) => ( !['super_', 'camelize'].includes(t) ))\n  for(let i = 0; i < this.options.columns.length; i++){\n    const v = this.options.columns[i] || 'ascii'\n    if(typeof v === 'string'){\n      if(!accepted_header_types.includes(v)){\n        throw Error(`Invalid column type: got \"${v}\", default values are ${JSON.stringify(accepted_header_types)}`)\n      }\n      this.options.columns[i] = Generator[v]\n    }\n  }\n  return this\n}\nutil.inherits(Generator, stream.Readable)\n// Export the class\nmodule.exports.Generator = Generator\n// Generate a random number between 0 and 1 with 2 decimals. The function is idempotent if it detect the \"seed\" option.\nGenerator.prototype.random = function(){\n  if(this.options.seed){\n    return this.options.seed = this.options.seed * Math.PI * 100 % 100 / 100\n  }else{\n    return Math.random()\n  }\n}\n// Stop the generation.\nGenerator.prototype.end = function(){\n  this.push(null)\n}\n// Put new data into the read queue.\nGenerator.prototype._read = function(size){\n  // Already started\n  const data = []\n  let length = this._.fixed_size_buffer.length\n  if(length !== 0){\n    data.push(this._.fixed_size_buffer)\n  }\n  while(true){\n    // Time for some rest: flush first and stop later\n    if( (this._.count_created === this.options.length) || (this.options.end && Date.now() > this.options.end) || (this.options.duration && Date.now() > this._.start_time + this.options.duration) ){\n      // Flush\n      if(data.length){\n        if(this.options.objectMode){\n          for(const line of data){\n            this.__push(line)\n          }\n        }else{\n          this.__push(data.join('') + (this.options.eof ? this.options.eof : ''))\n        }\n      }\n      // Stop\n      return this.push(null)\n    }\n    // Create the line\n    let line = []\n    let lineLength\n    this.options.columns.forEach((fn) => {\n      line.push(fn(this))\n    })\n    // for(const header in this.options.columns){\n    //   // Create the field\n    //   line.push(header(this))\n    // }\n    // Obtain line length\n    if(this.options.objectMode){\n      lineLength = 0\n      for(const column of line)\n        lineLength += column.length\n    }else{\n      // Stringify the line\n      line = (this._.count_created === 0 ? '' : this.options.rowDelimiter)+line.join(this.options.delimiter)\n      lineLength = line.length\n    }\n    this._.count_created++\n    if(length + lineLength > size){\n      if(this.options.objectMode){\n        data.push(line)\n        for(const line of data){\n          this.__push(line)\n        }\n      }else{\n        if(this.options.fixedSize){\n          this._.fixed_size_buffer = line.substr(size - length)\n          data.push(line.substr(0, size - length))\n        }else{\n          data.push(line)\n        }\n        this.__push(data.join(''))\n      }\n      return\n    }\n    length += lineLength\n    data.push(line)\n  }\n}\n// Put new data into the read queue.\nGenerator.prototype.__push = function(record){\n  this._.count_written++\n  if(this.options.sleep > 0){\n    setTimeout( () => {\n      this.push(record)\n    }, this.options.sleep)\n  }else{\n    this.push(record)\n  }\n}\n// Generate an ASCII value.\nGenerator.ascii = function(gen){\n  // Column\n  const column = []\n  const nb_chars = Math.ceil(gen.random() * gen.options.maxWordLength)\n  for(let i=0; i<nb_chars; i++){\n    const char = Math.floor(gen.random() * 32)\n    column.push(String.fromCharCode(char + (char < 16 ? 65 : 97 - 16)))\n  }\n  return column.join('')\n}\n// Generate an integer value.\nGenerator.int = function(gen){\n  return Math.floor(gen.random() * Math.pow(2, 52))\n}\n// Generate an boolean value.\nGenerator.bool = function(gen){\n  return Math.floor(gen.random() * 2)\n}\n// Camelize option properties\nGenerator.camelize = function(str){\n  return str.replace(/_([a-z])/gi, function(_, match, index){\n    return match.toUpperCase()\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}