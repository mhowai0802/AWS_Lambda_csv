{"ast":null,"code":"/**\n * @fileoverview ES7 async wrapper for the csv package.\n */\n'use strict';\n\nconst csv = require('csv');\n\nclass CsvAsync {\n  /**\n   * @param {object} [options]\n   * @param {number} options.seed\n   * @param {number} options.columns\n   * @param {number} options.length\n   */\n  static generate(options) {\n    return new Promise((resolve, reject) => {\n      const callback = (error, output) => error ? reject(error) : resolve(output);\n\n      options ? csv.generate(options, callback) : csv.generate(callback);\n    });\n  }\n  /**\n   * Parses a CSV file into an array of rows.\n   * @param {string} input\n   * @param {object} [options]\n   */\n\n\n  static parse(input, options) {\n    return new Promise((resolve, reject) => {\n      const callback = (error, output) => error ? reject(error) : resolve(output);\n\n      options ? csv.parse(input, options, callback) : csv.parse(input, callback);\n    });\n  }\n  /**\n   *\n   * @param {string[][]} data\n   * @param {function} handler\n   * @param {object} [options]\n   */\n\n\n  static transform(data, handler, options) {\n    return new Promise((resolve, reject) => {\n      const callback = (error, output) => error ? reject(error) : resolve(output);\n\n      options ? csv.transform(data, handler, options, callback) : csv.transform(data, handler, callback);\n    });\n  }\n  /**\n   *\n   * @param {string[][]} data\n   * @param {object} options\n   */\n\n\n  static stringify(data, options) {\n    return new Promise((resolve, reject) => {\n      const callback = (error, output) => error ? reject(error) : resolve(output);\n\n      options ? csv.stringify(data, options, callback) : csv.stringify(data, callback);\n    });\n  }\n\n}\n\nmodule.exports = CsvAsync;","map":{"version":3,"names":["csv","require","CsvAsync","generate","options","Promise","resolve","reject","callback","error","output","parse","input","transform","data","handler","stringify","module","exports"],"sources":["/Users/waiwai/Desktop/Github/Einstein/testing/node_modules/async-csv/index.js"],"sourcesContent":["/**\n * @fileoverview ES7 async wrapper for the csv package.\n */\n\n'use strict';\n\nconst csv = require('csv');\n\nclass CsvAsync {\n  /**\n   * @param {object} [options]\n   * @param {number} options.seed\n   * @param {number} options.columns\n   * @param {number} options.length\n   */\n  static generate(options) {\n    return new Promise((resolve, reject) => {\n      const callback = (error, output) =>\n        error\n          ? reject(error)\n          : resolve(output);\n\n      options\n        ? csv.generate(options, callback)\n        : csv.generate(callback);\n    });\n  }\n\n  /**\n   * Parses a CSV file into an array of rows.\n   * @param {string} input\n   * @param {object} [options]\n   */\n  static parse(input, options) {\n    return new Promise((resolve, reject) => {\n      const callback = (error, output) =>\n        error\n          ? reject(error)\n          : resolve(output);\n\n      options\n        ? csv.parse(input, options, callback)\n        : csv.parse(input, callback);\n    });\n  }\n\n  /**\n   *\n   * @param {string[][]} data\n   * @param {function} handler\n   * @param {object} [options]\n   */\n  static transform(data, handler, options) {\n    return new Promise((resolve, reject) => {\n      const callback = (error, output) =>\n        error\n          ? reject(error)\n          : resolve(output);\n\n      options\n        ? csv.transform(data, handler, options, callback)\n        : csv.transform(data, handler, callback);\n    });\n  }\n\n  /**\n   *\n   * @param {string[][]} data\n   * @param {object} options\n   */\n  static stringify(data, options) {\n    return new Promise((resolve, reject) => {\n      const callback = (error, output) =>\n        error\n          ? reject(error)\n          : resolve(output);\n\n      options\n        ? csv.stringify(data, options, callback)\n        : csv.stringify(data, callback);\n    });\n  }\n}\n\nmodule.exports = CsvAsync;\n"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AAEA,MAAMC,QAAN,CAAe;EACb;AACF;AACA;AACA;AACA;AACA;EACiB,OAARC,QAAQ,CAACC,OAAD,EAAU;IACvB,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtC,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KACfD,KAAK,GACDF,MAAM,CAACE,KAAD,CADL,GAEDH,OAAO,CAACI,MAAD,CAHb;;MAKAN,OAAO,GACHJ,GAAG,CAACG,QAAJ,CAAaC,OAAb,EAAsBI,QAAtB,CADG,GAEHR,GAAG,CAACG,QAAJ,CAAaK,QAAb,CAFJ;IAGD,CATM,CAAP;EAUD;EAED;AACF;AACA;AACA;AACA;;;EACc,OAALG,KAAK,CAACC,KAAD,EAAQR,OAAR,EAAiB;IAC3B,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtC,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KACfD,KAAK,GACDF,MAAM,CAACE,KAAD,CADL,GAEDH,OAAO,CAACI,MAAD,CAHb;;MAKAN,OAAO,GACHJ,GAAG,CAACW,KAAJ,CAAUC,KAAV,EAAiBR,OAAjB,EAA0BI,QAA1B,CADG,GAEHR,GAAG,CAACW,KAAJ,CAAUC,KAAV,EAAiBJ,QAAjB,CAFJ;IAGD,CATM,CAAP;EAUD;EAED;AACF;AACA;AACA;AACA;AACA;;;EACkB,OAATK,SAAS,CAACC,IAAD,EAAOC,OAAP,EAAgBX,OAAhB,EAAyB;IACvC,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtC,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KACfD,KAAK,GACDF,MAAM,CAACE,KAAD,CADL,GAEDH,OAAO,CAACI,MAAD,CAHb;;MAKAN,OAAO,GACHJ,GAAG,CAACa,SAAJ,CAAcC,IAAd,EAAoBC,OAApB,EAA6BX,OAA7B,EAAsCI,QAAtC,CADG,GAEHR,GAAG,CAACa,SAAJ,CAAcC,IAAd,EAAoBC,OAApB,EAA6BP,QAA7B,CAFJ;IAGD,CATM,CAAP;EAUD;EAED;AACF;AACA;AACA;AACA;;;EACkB,OAATQ,SAAS,CAACF,IAAD,EAAOV,OAAP,EAAgB;IAC9B,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACtC,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,MAAR,KACfD,KAAK,GACDF,MAAM,CAACE,KAAD,CADL,GAEDH,OAAO,CAACI,MAAD,CAHb;;MAKAN,OAAO,GACHJ,GAAG,CAACgB,SAAJ,CAAcF,IAAd,EAAoBV,OAApB,EAA6BI,QAA7B,CADG,GAEHR,GAAG,CAACgB,SAAJ,CAAcF,IAAd,EAAoBN,QAApB,CAFJ;IAGD,CATM,CAAP;EAUD;;AAzEY;;AA4EfS,MAAM,CAACC,OAAP,GAAiBhB,QAAjB"},"metadata":{},"sourceType":"script"}